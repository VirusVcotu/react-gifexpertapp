{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGriditem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGriditem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAU,OAAIP,GAAJ,mBAAkBO,OAC1CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARtB,kBAWZM,GAXY,4CAAH,sDCAPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAI/B,OAFAc,QAAQC,IAAI,CAACL,QAAMV,QAGf,sBAAKgB,UAAU,OAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCJHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAC,GAEFC,YAAW,WACPZ,QAAQC,IAAIU,GACZH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAEf,UAIZ,CAACtB,IAEIuB,EDrBgBM,CAAa7B,GAA7BO,EAAP,EAAOA,KAAKe,EAAZ,EAAYA,QAGZ,OACI,qCACI,6BAAKtB,IAEJsB,GAAW,wCAEZ,qBAAKJ,UAAU,YAAf,SAIQX,EAAKE,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAEIA,GADCA,EAAIC,aElBpBmB,EAAe,WAGxB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWe,KAAI,SAAAT,GACX,OAAO,cAAC,EAAD,CAEHA,SAAUA,GADLA,YCjBjC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d1403bab.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        \r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategorias(categorias =>[inputValue,...categorias]);\r\n            setInputValue(\"\");\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=z27MP8hAvGsFcgQMBq4iGidmdFnJZNp4`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url \r\n        }\r\n    })\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGriditem = ({title,url}) => {\r\n\r\n    console.log({title,url});\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGriditem } from './GifGriditem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data,loading} = useFetchGifs(category);\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p>Loading</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n            \r\n            \r\n                {\r\n                    data.map(img =>(\r\n                        <GifGriditem \r\n                        key={img.id}\r\n                        {...img}/>\r\n                    ))\r\n                }\r\n            \r\n            </div>\r\n        </>\r\n    )    \r\n}\r\n","import { useState, useEffect} from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n\r\n                setTimeout(()=>{ \r\n                    console.log(imgs);\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                },3000);\r\n            })\r\n          \r\n\r\n    },[category])\r\n\r\n    return state;\r\n}\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categorias = [\"One Punch\",\"Samurai X\", \"Dragon Ball\"];\r\n    const [categorias, setCategorias] = useState([\"One Punch\"])\r\n\r\n    //const handleAdd = () => {\r\n       // setCategorias([...categorias,\"The Simpsons\"]);\r\n        \r\n    //}\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={setCategorias}/>\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categorias.map(category=>{\r\n                        return <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from \"./GifExpertApp\";\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}